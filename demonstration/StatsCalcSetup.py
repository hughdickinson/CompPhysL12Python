'''
Cython uses functionality provided by the distutils package to compile
the code it generates and define extensions to the Python language.

Cython does not import the required modules and packages automatically,
so this must be done explicitly
'''
from distutils.core import setup
from distutils.extension import Extension
'''
Import the cythonize function that will generate C code that bridges between
C and Python.
'''
from Cython.Build import cythonize

'''
Invoke the distutils.core.setup(...) method to build an extension module
that can be imported by the Python or IPython interpreters and will provide
access to the functionality provided by the "libStatsCalculatorCAPI.so" shared 
library. 

The C code that will be used to build the new module is generated by the 
Cython.Build.cythonize(...) function, which in turn operates on intermediate
module description that is encapsulated by the distutils.extension.Extension 
class.

The distutils.extension.Extension constructor accepts numerous arguments, but
only 3 are required in this case.

1) The "name" argument defines an identifier for the module to generate. In this
   case "StatsCalcCython". Accordingly, the genereated module code will be
   written into a file named "StatsCalcCython.py".
2) The "sources" argument is a Python list with str-type elements specifying paths 
   to the source (in this case ".pyx") files that define the C->Python mapping for 
   the functionality that the generated module will provide and will be used by 
   Cython.Build.cythonize(...) when it operates.
3) The "libraries" argument is a Python list with str-type elements specifying the 
   names of the shared libraries (without the "lib" prefix or the ".so" suffix) 
   that should be linked against when the generated module is loaded
   by the Python or IPython interpreters.
'''
setup(
    ext_modules = cythonize([Extension(name = "StatsCalcCython",
                                       sources = ["StatsCalcCython.pyx"],
                                       libraries = ["StatsCalculatorCAPI"])
                            ])
)
